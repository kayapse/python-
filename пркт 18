import threading
import time
import random

# ===== Завдання 1: Зворотний відлік =====
def countdown():
    print("=== Зворотний відлік почато ===")
    for i in range(10, 0, -1):
        print(f"Залишилось: {i} сек")
        time.sleep(1)
    print("Зворотний відлік завершено!\n")

# ===== Завдання 2: Симуляція завантаження =====
def download_file(file_id):
    duration = random.randint(3, 5)
    print(f"Файл {file_id}: завантаження...")
    time.sleep(duration)
    print(f"Файл {file_id}: завантаження завершено за {duration} сек\n")

# ===== Завдання 3: Паралельна обробка даних =====
def compute_sum(part, index, results):
    partial_sum = sum(part)
    results[index] = partial_sum
    print(f"Потік {index+1}: сума частини = {partial_sum}")

def main():
    # === Завдання 1 ===
    t1 = threading.Thread(target=countdown)
    t1.start()
    t1.join()  # дочекаємось завершення зворотного відліку

    # === Завдання 2 ===
    print("=== Симуляція завантаження файлів ===")
    threads = []
    for i in range(1, 4):
        t = threading.Thread(target=download_file, args=(i,))
        threads.append(t)
        t.start()

    for t in threads:
        t.join()  # чекаємо завершення всіх потоків

    # === Завдання 3 ===
    print("\n=== Паралельна обробка даних ===")
    numbers = [random.randint(1, 100) for _ in range(1000)]
    parts = [
        numbers[:250],
        numbers[250:500],
        numbers[500:750],
        numbers[750:]
    ]
    results = [0] * 4
    sum_threads = []

    for i in range(4):
        t = threading.Thread(target=compute_sum, args=(parts[i], i, results))
        sum_threads.append(t)
        t.start()

    for t in sum_threads:
        t.join()

    total = sum(results)
    print(f"\nЗагальна сума всіх чисел: {total}")

if __name__ == "__main__":
    main()
